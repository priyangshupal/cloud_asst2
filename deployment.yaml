---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi # Adjust as needed

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudasst2-flask
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cloudasst2-flask
  template:
    metadata:
      labels:
        app: cloudasst2-flask
    spec:
      containers:
        - name: flask-app
          image: aravindkrish23/cloudasst2:alpha_v2
          ports:
            - containerPort: 5000
          env:
            - name: MONGO_HOST
              value: "mongo-lb"
            - name: MONGO_PORT
              value: "27017"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db # Adjust as needed
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: cloudasst2-flask-lb
spec:
  selector:
    app: cloudasst2-flask
  ports:
    - port: 5000
      targetPort: 5000
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-lb
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: LoadBalancer

---

